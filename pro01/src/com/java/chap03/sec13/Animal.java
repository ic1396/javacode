package com.java.chap03.sec13;

/**
 * 多态性表现
 * 1、方法的重载和重写。
 * 2、可以用父类的引用指向子类的具体实现，而且可以随时更换为其他子类的具体实现
 * 
 * 对象的转型:
 * 1、向上转型：子类对象转换为父类对象，安全的转型
 * 2、向下转型：父类对象转换为子类对象，不安全的转型（必须要知道具体的实现类才能保证安全）
 * 
 * 用接口和继承都可以实现多态，在实际开发中更多的使用接口
 * 
 */
public class Animal {
	
	public void say(){
		
		System.out.println("我是一个动物");
	}

}
